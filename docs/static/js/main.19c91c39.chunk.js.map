{"version":3,"sources":["AppContext.js","Home.js","Register.js","Login.js","Logout.js","App.js","index.js"],"names":["AppContext","React","createContext","Home","ctx","useContext","apiroot","process","token","useState","notes","setNotes","emptyNote","id","title","content","createdTime","modifiedTime","note","setNote","useEffect","axios","get","headers","Authorization","then","response","data","catch","error","console","log","className","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","alignRight","to","username","Container","fluid","Row","Col","sm","md","Button","variant","onClick","e","preventDefault","post","ListGroup","activeKey","map","index","Item","action","handleTitleClick","Form","Group","Control","type","placeholder","value","onChange","target","as","rows","put","newNotes","selectedNote","find","x","delete","filter","Register","email","setEmail","password","setPassword","confirmPassword","setconfirmPassword","errors","setErrors","Card","Body","Alert","length","join","onSubmit","toast","success","messages","key","push","controlId","Label","required","Login","history","useHistory","qlogout","URLSearchParams","useLocation","search","rememberMe","setRememberMe","localStorage","sessionStorage","removeItem","setUsername","setToken","setIsLoggedIn","onInput","Check","label","checked","Logout","App","tokenString","isLoggedIn","Provider","basename","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19c91c39.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst AppContext = React.createContext(null);\r\n\r\nexport default AppContext;","import AppContext from './AppContext';\r\nimport './Home.css';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Col, Container, Row, Navbar, Nav, NavDropdown, ListGroup, Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios'\r\n\r\nfunction Home() {\r\n    const ctx = useContext(AppContext);\r\n    const apiroot = process.env.REACT_APP_API_ROOT;\r\n    const token = ctx.token;\r\n    const [notes, setNotes] = useState([]);\r\n    const emptyNote = { id: 0, title: \"\", content: \"\", createdTime: \"\", modifiedTime: \"\" };\r\n    const [note, setNote] = useState({ ...emptyNote });\r\n    // console.log(notes);\r\n    const loadNotes = function () {\r\n        axios.get(apiroot + \"/api/Notes\", { headers: { Authorization: \"Bearer \" + token } })\r\n            .then(function (response) {\r\n                setNotes(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const addNewNote = function () {\r\n        axios.post(apiroot + \"/api/Notes\", { title: \"New Note\", content: \"\" },\r\n            { headers: { Authorization: \"Bearer \" + token } })\r\n            .then(function (response) {\r\n                const note = response.data;\r\n                setNotes([...notes, note]); //prepends the newly created note to the note list. \r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const saveNote = function () {\r\n        axios.put(apiroot + \"/api/Notes/\" + note.id,\r\n            { id: note.id, title: note.title, content: note.content },\r\n            { headers: { Authorization: \"Bearer \" + token } })\r\n            .then(function (response) {\r\n                const newNotes = [...notes];\r\n                const selectedNote = newNotes.find((x) => x.id == note.id); //find the note\r\n                selectedNote.title = note.title; //update the note's title\r\n                selectedNote.content = note.content; //update the note's content\r\n                setNotes(newNotes); //update the state\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const deleteNote = function () {\r\n        axios.delete(apiroot + \"/api/Notes/\" + note.id, { headers: { Authorization: \"Bearer \" + token } })\r\n            .then(function (response) {\r\n                const newNotes = notes.filter((x) => x.id != note.id);\r\n                setNotes(newNotes);\r\n                setNote({ ...emptyNote });\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const handleTitleClick = function (e, note) {\r\n        e.preventDefault();\r\n        setNote(note);\r\n\r\n    };\r\n\r\n    const handleNewNoteClick = function (e) {\r\n        e.preventDefault();\r\n        addNewNote();\r\n    };\r\n\r\n    const handleSaveClick = function (e) {\r\n        e.preventDefault();\r\n        saveNote();\r\n    };\r\n\r\n    const handleDeleteClick = function (e) {\r\n        e.preventDefault();\r\n        deleteNote();\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadNotes();\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"home-wrapper\">\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#home\">NoteHub</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                    </Nav>\r\n                    <Nav>\r\n                        <NavDropdown alignRight title=\"My Account\" id=\"basic-nav-dropdown\">\r\n                            <Link className=\"dropdown-item\" to=\"/logout\">Logout ({ctx.username})</Link>\r\n                        </NavDropdown>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            <Container fluid className=\"flex-fill\">\r\n                <Row className=\"h-100\">\r\n                    <Col sm={4} md={3}>\r\n                        <h3 className=\"mt-4 d-flex\">My Notes\r\n                        <Button className=\"ml-auto\" variant=\"success\" onClick={handleNewNoteClick}><i className=\"fas fa-plus \"></i></Button>\r\n                        </h3>\r\n                        <ListGroup activeKey={\"#notes-\" + note.id}>\r\n                            {notes.map((note, index) =>\r\n                                <ListGroup.Item action href={\"#notes-\" + note.id} key={note.id} onClick={(e) => handleTitleClick(e, note)}>\r\n                                    {note.title}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col className=\"h-100\" sm={8} md={9}>\r\n                        {\r\n                            note.id == 0 ? <Form></Form> :\r\n                                <Form className=\"py-3 h-100 d-flex flex-column\" >\r\n                                    <Form.Group>\r\n                                        <Form.Control type=\"text\" placeholder=\"Title\" value={note.title}\r\n                                            onChange={(e) => setNote({ ...note, title: e.target.value })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"flex-fill\">\r\n                                        <Form.Control className=\"h-100\" as=\"textarea\" rows={10} placeholder=\"Content\" value={note.content}\r\n                                            onChange={(e) => setNote({ ...note, content: e.target.value })} />\r\n                                    </Form.Group>\r\n                                    <div>\r\n                                        <Button variant=\"primary\" onClick={handleSaveClick}>Save</Button>\r\n                                        <Button variant=\"danger\" onClick={handleDeleteClick} className=\"ml-2\">Delete</Button>\r\n                                    </div>\r\n                                </Form>}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;\r\n\r\n","import './Register.css';\r\nimport { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nfunction Register() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    const handleSubmit = function (e) {\r\n        setErrors([]);\r\n        e.preventDefault();\r\n\r\n        axios.post(process.env.REACT_APP_API_ROOT + \"/api/Account/Register\", { email, password, confirmPassword })\r\n            .then(function (response) {\r\n                setEmail(\"\");\r\n                setPassword(\"\");\r\n                setconfirmPassword(\"\");\r\n                toast.success(\"Account creation is succesful.Now you can login and start using app !\");\r\n            })\r\n            .catch(function (error) {\r\n                if (!error.response) {\r\n                    setErrors([\"Cannot connect to the server. Please try again later.\"]);\r\n                    return;\r\n                }\r\n                if (error.response.data && error.response.data.errors) {\r\n                    const messages = [];\r\n                    for (const key in error.response.data.errors) {\r\n                        messages.push(...error.response.data.errors[key]);\r\n                    }\r\n                    setErrors(messages);\r\n                }\r\n            });\r\n    };\r\n    return (\r\n        <Card className=\"card-register\">\r\n            <Card.Body className=\"p-sm-4\">\r\n                <ToastContainer />\r\n                <h1 className=\"text-center\">Register</h1>\r\n                <Alert variant=\"danger\" className={errors.length === 0 ? \"d-none\" : \"\"}>\r\n                    {errors.join(' ')}\r\n                </Alert>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" required value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" required value={password}\r\n                            onChange={(e) => setPassword(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formConfirmPassword\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" required value={confirmPassword}\r\n                            onChange={(e) => setconfirmPassword(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit \r\n                    </Button>\r\n                </Form>\r\n                <div className=\"text-center mt-3\">\r\n                    <Link to=\"/login\">Login with existing user account</Link>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\nexport default Register;","import './Login.css';\r\nimport AppContext from './AppContext';\r\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\r\nimport { Link, useLocation, useHistory } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useEffect, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Login() {\r\n    const history = useHistory();\r\n    const ctx = useContext(AppContext);\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const qlogout = query.get(\"logout\");\r\n\r\n    useEffect(() => {\r\n        //parametre olarak verilen metot login bileşeni sayfada render olunca çalışır.\r\n        if (qlogout === \"success\") {\r\n            toast(\"You have logged out succesfully!\");\r\n        }\r\n    }, [qlogout]); //[qlogout] aldığımız parametreye göre çalışıyor.Yani bu parametre değiştikçe çalışşsın.\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [rememberMe, setRememberMe] = useState(true);\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    const handleSubmit = function (e) {\r\n        e.preventDefault();\r\n        // console.log(process.env.REACT_APP_API_ROOT);\r\n        axios.post(process.env.REACT_APP_API_ROOT + \"/api/Account/Login\", {\r\n            username: email,\r\n            password: password\r\n        }).then(function\r\n            (response) {\r\n            if (rememberMe) {\r\n                localStorage[\"usename\"] = email;\r\n                localStorage[\"token\"] = response.data.token;\r\n                sessionStorage.removeItem(\"username\");\r\n                sessionStorage.removeItem(\"token\");\r\n            }\r\n            else {\r\n                sessionStorage[\"username\"] = email;\r\n                sessionStorage[\"token\"] = response.data.token;\r\n                localStorage.removeItem(\"username\");\r\n                localStorage.removeItem(\"token\");\r\n            }\r\n            ctx.setUsername(email);\r\n            \r\n            ctx.setToken(response.data.token);\r\n            ctx.setIsLoggedIn(true);\r\n            history.push(\"/\");\r\n        }).catch(function (error) {\r\n            if (!error.response) {\r\n                setErrors([\"Cannot connect to the server. Please try again later.\"]);\r\n                return;\r\n            }\r\n            if (error.response.data && error.response.data.errors) {\r\n                const messages = [];\r\n                for (const key in error.response.data.errors) {\r\n                    messages.push(...error.response.data.errors[key]);\r\n                }\r\n                setErrors(messages);\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Card className=\"card-login\">\r\n            <Card.Body className=\"p-sm-4\">\r\n                <ToastContainer />\r\n                <h1 className=\"text-center\">Login</h1>\r\n                {/* {email} {password} {rememberMe ? \"remember\" : \"don't remember\"} */}\r\n                <Alert variant=\"danger\" className={errors.length === 0 ? \"d-none\" : \"\"}>\r\n                    {errors.join(' ')}\r\n                </Alert>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onInput={(e) => setEmail(e.target.value)} required />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" value={password} onInput={(e) => setPassword(e.target.value)} required />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Remember me\" checked={rememberMe} onChange={(e) => setRememberMe(e.target.checked)} />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                </Button>\r\n                </Form>\r\n                <div className=\"text-center mt-3\">\r\n                    <Link to=\"/register\">Register as a new user</Link>\r\n                </div>\r\n\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport AppContext from './AppContext';\r\n\r\n\r\nfunction Logout() {\r\n    \r\n    const ctx = useContext(AppContext);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"username\");\r\n    sessionStorage.removeItem(\"token\");\r\n    sessionStorage.removeItem(\"username\");\r\n\r\n\r\n    useEffect(() => {\r\n        ctx.setIsLoggedIn(false);\r\n        ctx.setToken(null);\r\n    });\r\n\r\n    return <Redirect to=\"/login?logout=success\" />;\r\n}\r\n\r\nexport default Logout\r\n","import React, { useState } from \"react\";\nimport AppContext from './AppContext';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport './App.css';\nimport Home from './Home'\nimport Register from './Register'\nimport Login from './Login'\nimport Logout from './Logout'\n\nfunction App() {\n  // todo: local/session storage da token varsa login et.. \n  const tokenString = sessionStorage[\"token\"] || localStorage[\"token\"] || null;\n\n  const [isLoggedIn, setIsLoggedIn] = useState(tokenString != null); //isLoggedIn=true; react'e haber vermez.\n  const [token, setToken] = useState(tokenString);\n  const [username, setUsername] = useState(sessionStorage[\"username\"] || localStorage[\"username\"] || null);\n  return (\n    <AppContext.Provider value={{ token, setToken, isLoggedIn, setIsLoggedIn, username, setUsername }}>\n      <Router basename=\"/NoteHub\">\n        <Switch>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/logout\">\n            <Logout />\n          </Route>\n          <Route path=\"/\">\n            {isLoggedIn ? <Home /> : <Redirect to=\"/login\" />}\n          </Route>\n        </Switch>\n      </Router>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}